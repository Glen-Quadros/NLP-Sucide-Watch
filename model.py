# -*- coding: utf-8 -*-
"""Cerina.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16YOgVdmQfv6yB0Zwa--QPveBjiF3wqG3
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv('/content/dataset.csv', encoding='utf-8')

df.head()

import spacy

nlp = spacy.load("en_core_web_sm")

def preprocess_text(text):
    doc = nlp(text)
    return " ".join([token.lemma_ for token in doc if not token.is_stop and not token.is_punct])

X = df["text"]
y = df["label"]

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=101)

X_train = X_train.apply(preprocess_text)
X_test = X_test.apply(preprocess_text)

from sklearn.feature_extraction.text import CountVectorizer

vectorizer = CountVectorizer()
X_train = vectorizer.fit_transform(X_train)
X_test = vectorizer.transform(X_test)

from sklearn.svm import SVC

svc = SVC()

from sklearn.model_selection import GridSearchCV

param_grid = {'C': [0.1, 1, 10, 100, 1000], 
              'gamma': [1, 0.1, 0.01, 0.001, 0.0001],
              'kernel': ['rbf']}

grid = GridSearchCV(SVC(), param_grid, refit = True, verbose = 3)

grid.fit(X_train, y_train)

print(grid.best_params_)

final_model = SVC(C=10, gamma=0.001, kernel='rbf')

final_model.fit(X_train, y_train)

y_preds = final_model.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

print(classification_report(y_test, y_preds,))

confusion_matrix(y_test, y_preds)

accuracy_score(y_test, y_preds)

import pickle

filename = 'model.pkl'
with open(filename, 'wb') as file:
    pickle.dump(final_model, file)

